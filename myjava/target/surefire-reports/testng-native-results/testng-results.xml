<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="56214" started-at="2014-04-19T08:03:34Z" finished-at="2014-04-19T08:04:30Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="56214" started-at="2014-04-19T08:03:34Z" finished-at="2014-04-19T08:04:30Z">
      <class name="learn.deepak.java.concurrent.TestMyImmutable">
        <test-method status="PASS" signature="createMyImmutable()[pri:0, instance:learn.deepak.java.concurrent.TestMyImmutable@358b3364]" name="createMyImmutable" duration-ms="3" started-at="2014-04-19T13:33:34Z" finished-at="2014-04-19T13:33:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createMyImmutable -->
      </class> <!-- learn.deepak.java.concurrent.TestMyImmutable -->
      <class name="learn.deepak.java.concurrent.TestMySimpleProducerConsumer">
        <test-method status="PASS" signature="testMultiProducerConsumer()[pri:0, instance:learn.deepak.java.concurrent.TestMySimpleProducerConsumer@7a5e1077]" name="testMultiProducerConsumer" duration-ms="15703" started-at="2014-04-19T13:33:56Z" finished-at="2014-04-19T13:34:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiProducerConsumer -->
        <test-method status="PASS" signature="testSingleProducerConsumer()[pri:0, instance:learn.deepak.java.concurrent.TestMySimpleProducerConsumer@7a5e1077]" name="testSingleProducerConsumer" duration-ms="10442" started-at="2014-04-19T13:34:12Z" finished-at="2014-04-19T13:34:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleProducerConsumer -->
      </class> <!-- learn.deepak.java.concurrent.TestMySimpleProducerConsumer -->
      <class name="learn.deepak.java.concurrent.TestMyTransactionManager">
        <test-method status="PASS" signature="test1()[pri:0, instance:learn.deepak.java.concurrent.TestMyTransactionManager@45db05b2]" name="test1" duration-ms="1" started-at="2014-04-19T13:34:30Z" finished-at="2014-04-19T13:34:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:learn.deepak.java.concurrent.TestMyTransactionManager@45db05b2]" name="test1" duration-ms="1" started-at="2014-04-19T13:34:30Z" finished-at="2014-04-19T13:34:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1()[pri:0, instance:learn.deepak.java.concurrent.TestMyTransactionManager@45db05b2]" name="test1" duration-ms="1" started-at="2014-04-19T13:34:30Z" finished-at="2014-04-19T13:34:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- learn.deepak.java.concurrent.TestMyTransactionManager -->
      <class name="learn.deepak.java.concurrent.TestMyTestHarness">
        <test-method status="PASS" signature="testHarness()[pri:0, instance:learn.deepak.java.concurrent.TestMyTestHarness@2e530cf2]" name="testHarness" duration-ms="4008" started-at="2014-04-19T13:34:26Z" finished-at="2014-04-19T13:34:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHarness -->
      </class> <!-- learn.deepak.java.concurrent.TestMyTestHarness -->
      <class name="learn.deepak.java.fundamentals.TestDerivedClass">
        <test-method status="PASS" signature="initOrder02()[pri:0, instance:learn.deepak.java.fundamentals.TestDerivedClass@e60e128]" name="initOrder02" duration-ms="6" started-at="2014-04-19T13:33:34Z" finished-at="2014-04-19T13:33:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initOrder02 -->
      </class> <!-- learn.deepak.java.fundamentals.TestDerivedClass -->
      <class name="learn.deepak.java.concurrent.TestMySleepingRunnable">
        <test-method status="PASS" signature="testSleepingRunnable()[pri:0, instance:learn.deepak.java.concurrent.TestMySleepingRunnable@5c07f4ec]" name="testSleepingRunnable" duration-ms="4005" started-at="2014-04-19T13:34:22Z" finished-at="2014-04-19T13:34:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSleepingRunnable -->
      </class> <!-- learn.deepak.java.concurrent.TestMySleepingRunnable -->
      <class name="learn.deepak.java.concurrent.TestMyInterruptedThread">
        <test-method status="PASS" signature="interruptTest()[pri:0, instance:learn.deepak.java.concurrent.TestMyInterruptedThread@6e811c88]" name="interruptTest" duration-ms="6012" started-at="2014-04-19T13:33:34Z" finished-at="2014-04-19T13:33:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- interruptTest -->
        <test-method status="PASS" signature="noInterruptionTest()[pri:0, instance:learn.deepak.java.concurrent.TestMyInterruptedThread@6e811c88]" name="noInterruptionTest" duration-ms="16008" started-at="2014-04-19T13:33:40Z" finished-at="2014-04-19T13:33:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noInterruptionTest -->
      </class> <!-- learn.deepak.java.concurrent.TestMyInterruptedThread -->
      <class name="learn.deepak.java.concurrent.TestMyRunnable">
        <test-method status="PASS" signature="simpleRunnableTest()[pri:0, instance:learn.deepak.java.concurrent.TestMyRunnable@4e76fba0]" name="simpleRunnableTest" duration-ms="1" started-at="2014-04-19T13:33:56Z" finished-at="2014-04-19T13:33:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleRunnableTest -->
      </class> <!-- learn.deepak.java.concurrent.TestMyRunnable -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
